// Code generated by github.com/rj45/rj32/emurj/bitfield. DO NOT EDIT.

package ctrl

type ExCtrl uint8

func (e ExCtrl) Sub() bool {
	const bit = 1 << 7
	return e&bit == bit
}

func (e ExCtrl) SetSub(v bool) ExCtrl {
	const bit = 1 << 7
	if v {
		return e | bit
	}
	return e & ^ExCtrl(bit)
}

func (e ExCtrl) AluOp() int {
	return int((e >> 5) & 0x3)
}

func (e ExCtrl) SetAluOp(v int) ExCtrl {
	e &= ^ExCtrl(0x3 << 5)
	e |= (ExCtrl(v) & 0x3) << 5
	return e
}

type WbCtrl uint8

func (w WbCtrl) RegWen() bool {
	const bit = 1 << 7
	return w&bit == bit
}

func (w WbCtrl) SetRegWen(v bool) WbCtrl {
	const bit = 1 << 7
	if v {
		return w | bit
	}
	return w & ^WbCtrl(bit)
}

func (w WbCtrl) WbMux() int {
	return int((w >> 6) & 0x1)
}

func (w WbCtrl) SetWbMux(v int) WbCtrl {
	w &= ^WbCtrl(0x1 << 6)
	w |= (WbCtrl(v) & 0x1) << 6
	return w
}

